<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grit</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shanergang.github.io/"/>
  <updated>2017-06-25T14:13:25.000Z</updated>
  <id>https://shanergang.github.io/</id>
  
  <author>
    <name>Ergang SHAN</name>
    <email>shan_ergang@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>聚类</title>
    <link href="https://shanergang.github.io/2017/06/25/%E8%81%9A%E7%B1%BB/"/>
    <id>https://shanergang.github.io/2017/06/25/聚类/</id>
    <published>2017-06-25T12:42:15.000Z</published>
    <updated>2017-06-25T14:13:25.000Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<h1 id="距离度量"><a href="#距离度量" class="headerlink" title="距离度量"></a>距离度量</h1><h2 id="样本点之间的距离"><a href="#样本点之间的距离" class="headerlink" title="样本点之间的距离"></a>样本点之间的距离</h2><h3 id="有序属性"><a href="#有序属性" class="headerlink" title="有序属性"></a>有序属性</h3><ul>
<li><p>闵可夫斯基距离<br>$$ L<em>p = \left( \sum</em>{i=1}^{n} |x_i-y_i|^p \right)^{\frac{1}{p}} $$</p>
</li>
<li><p>曼哈顿距离 $L_1$</p>
</li>
<li>欧氏距离 $L_2$</li>
<li>切比雪夫距离 $L_\infty$</li>
</ul>
<h3 id="无序属性"><a href="#无序属性" class="headerlink" title="无序属性"></a>无序属性</h3><ul>
<li>属性u上，值为a，b的 VDM 距离<br>$$ VDM(a,b)<em>p = \sum</em>{i=1}^{k} \left| \frac{m<em>{u,a,i}}{m</em>{u,a}} - \frac{m<em>{u,b,i}}{m</em>{u,b}} \right|^p $$</li>
</ul>
<h3 id="混合属性"><a href="#混合属性" class="headerlink" title="混合属性"></a>混合属性</h3><ul>
<li>将 $L_p$ 和 $VDM_p$ 加权求和</li>
</ul>
<h2 id="集合之间的距离"><a href="#集合之间的距离" class="headerlink" title="集合之间的距离"></a>集合之间的距离</h2><ul>
<li><p>最小距离<br>$$ \text{dist}_{\min}(C_i,C<em>j) = \min</em>{x\in C_i,y\in C_j} \text{dist}(x,y) $$</p>
</li>
<li><p>最大距离<br>$$ \text{dist}_{\max}(C_i,C<em>j) = \max</em>{x\in C_i,y\in C_j} \text{dist}(x,y) $$</p>
</li>
<li><p>平均距离<br>$$ \text{dist}_{\text{avg}}(C_i,C_j) = \frac{1}{|C_i||C<em>j|}\sum</em>{x\in C<em>i}\sum</em>{y\in C_j}\text{dist}(x,y) $$</p>
</li>
<li><p>中心距离<br>$$ \text{dist}_{\text{cen}}(C_i,C_j) = \text{dist}(\mu_i,\mu<em>j) \quad \mu=\frac{1}{|C|}\sum</em>{i=1}^{|C|} x_i $$</p>
</li>
</ul>
<h1 id="性能度量"><a href="#性能度量" class="headerlink" title="性能度量"></a>性能度量</h1><h2 id="内部性能度量"><a href="#内部性能度量" class="headerlink" title="内部性能度量"></a>内部性能度量</h2><ul>
<li><p>类的平均距离<br>$$ \text{avg}(C) = \frac{2}{|C|(|C|-1)}\sum_{1\leq i&lt;j\leq |C|} \text{dist}(x_i,x_j) $$</p>
</li>
<li><p>类的直径<br>$$ \text{diam}(C) = \max_{1\leq i&lt;j\leq |C|} \text{dist}(x_i,x_j) $$</p>
</li>
<li><p>指数<br>$$ \text{DBI} = \frac{1}{k} \sum<em>{i=1}^k \max</em>{j \neq i}\left( \frac{avg(C_i)+avg(C<em>j)}{\text{dist}</em>{\text{cen}}(C_i,C_j)}\right) $$</p>
</li>
</ul>
<h2 id="外部性能度量"><a href="#外部性能度量" class="headerlink" title="外部性能度量"></a>外部性能度量</h2><ul>
<li>不同聚类模型之间的比较</li>
</ul>
<p>$$ a = |SS|,    \quad SS = { (x_i, x_j) \; | \; \lambda_i=\lambda_j, \; \lambda_i^<em>=\lambda_j^</em>, \; i&lt;j } $$</p>
<p>$$ b = |SD|,    \quad SS = { (x_i, x_j) \; | \; \lambda_i=\lambda_j, \; \lambda_i^<em>\neq\lambda_j^</em>, \; i&lt;j } $$</p>
<p>$$ c = |DS|,    \quad SS = { (x_i, x_j) \; | \; \lambda_i\neq\lambda_j, \; \lambda_i^<em>=\lambda_j^</em>, \; i&lt;j } $$</p>
<p>$$ d = |DD|,    \quad SS = { (x_i, x_j) \; | \; \lambda_i\neq\lambda_j, \; \lambda_i^<em>\neq\lambda_j^</em>, \; i&lt;j } $$</p>
<ul>
<li>指数<br>$$ \text{FMI} = \sqrt{\frac{a}{a+b}\cdot\frac{a}{a+c}} $$</li>
</ul>
<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h2 id="原型聚类"><a href="#原型聚类" class="headerlink" title="原型聚类"></a>原型聚类</h2><h3 id="k均值算法"><a href="#k均值算法" class="headerlink" title="k均值算法"></a>k均值算法</h3><ul>
<li>找原型向量，最小化平方误差</li>
<li>迭代求解</li>
</ul>
<h3 id="学习向量量化算法"><a href="#学习向量量化算法" class="headerlink" title="学习向量量化算法"></a>学习向量量化算法</h3><ul>
<li>处理带有类别标记的数据样本</li>
<li>根据原型向量标记结果与类别标记结果是否一致来跟新原型向量</li>
<li>迭代求解</li>
</ul>
<h3 id="高斯混合聚类算法"><a href="#高斯混合聚类算法" class="headerlink" title="高斯混合聚类算法"></a>高斯混合聚类算法</h3><ul>
<li>概率模型，每一类对应一个高斯分布，整体服从混合高斯分布</li>
<li>EM算法求解</li>
</ul>
<h2 id="非原型聚类"><a href="#非原型聚类" class="headerlink" title="非原型聚类"></a>非原型聚类</h2><h3 id="密度聚类算法"><a href="#密度聚类算法" class="headerlink" title="密度聚类算法"></a>密度聚类算法</h3><ul>
<li>根据样本点分布的紧密程度聚类</li>
<li>领域、核心对象、密度相连、异常样本</li>
</ul>
<h3 id="层次聚类算法"><a href="#层次聚类算法" class="headerlink" title="层次聚类算法"></a>层次聚类算法</h3><ul>
<li>自底向上的聚合策略：每次更新减少一个簇</li>
<li>树形结构</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs</div><div class="line"></div><div class="line">data, label = make_blobs(n_samples=<span class="number">1000</span>, n_features=<span class="number">2</span>, centers=<span class="number">5</span>, random_state=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</div><div class="line"></div><div class="line">y_pred = KMeans(n_clusters=<span class="number">5</span>).fit_predict(data)</div><div class="line"></div><div class="line">pyplot.scatter(data[:, <span class="number">0</span>], data[:, <span class="number">1</span>], c=y_pred)</div><div class="line">pyplot.show()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;

&lt;h1 id=&quot;距离度量&quot;
    
    </summary>
    
      <category term="机器学习" scheme="https://shanergang.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="聚类" scheme="https://shanergang.github.io/tags/%E8%81%9A%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>异类--文化传承</title>
    <link href="https://shanergang.github.io/2017/05/13/%E5%BC%82%E7%B1%BB-%E6%96%87%E5%8C%96%E4%BC%A0%E6%89%BF/"/>
    <id>https://shanergang.github.io/2017/05/13/异类-文化传承/</id>
    <published>2017-05-13T09:10:14.000Z</published>
    <updated>2017-05-13T09:11:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="血染哈伦"><a href="#血染哈伦" class="headerlink" title="血染哈伦"></a>血染哈伦</h2><p>我们总是避免因为民族特性标签对个人产生先入为主的偏见，以各种理由拒绝以文化差异这种更广阔的背景来思考问题。农耕文明里，人们依靠的是人与人之间的合作，游牧文明里人们依靠的更多是自己。游牧文化所在的地方，荣誉感在男性那里占据存在感与自我价值的中心。只有在荣誉文化氛围的影响下，才会发生老绅士因为人格受辱而枪击他人的事件，也只有在荣誉文化氛围的影响下，法庭才会判决这样的谋杀指控不成立。</p>
<p>密歇根大学通过实验，找到了荣誉文化在现代社会的遗存线索。文化传承植入人性，影响长存，即便产生文化的经济、社会和人口等条件已经消失，文化也可能完好无损的保存下来。文化直接决定了我们看待世界的方法和行为模式。</p>
<h2 id="飞机失事的族裔理论"><a href="#飞机失事的族裔理论" class="headerlink" title="飞机失事的族裔理论"></a>飞机失事的族裔理论</h2><p>空难很多时候是一系列小失误、机械的小故障累积的结果。一个典型的空难通常包括7个认为的错误，且这7个错误主要集中在团队协作和相互沟通上。缓和性语气：低调处理所说内容以取悦听众，可以解释飞机失事事件中最令人费解的部分。</p>
<p>我们每个人都有个性，但与此同时，我们的个性也延续了我们从成长环境所培养成的特定倾向、习惯和反射条件，而不同的文化特性的区别又格外明显。霍夫斯泰德用个人主义和集体主义、不确定性规避（对模棱两可的承受程度）、权力距离指数（人们对待比自己更高等级阶层的态度）来区分各种文化间不同的价值取向。让副机长在机长面前维护自己的意见，必须帮助他们客服所处文化的权力距离。说英语可以帮助飞行员打破森严的韩国等级文化。</p>
<p>西方人的说话方式在语言学上被认为“以说话者为导向”，即说话者有责任讲意思清晰明白地表达出来。而亚洲许多国家是以“聆听着为导向”，即意思是否搞清楚取决于聆听者自己。</p>
<h2 id="稻田与数学"><a href="#稻田与数学" class="headerlink" title="稻田与数学"></a>稻田与数学</h2><p>中文和英文对数字记忆的差距是由读音长度和数字拼写结构方面的不同造成的，亚洲语言的数字系统含义清晰，这是亚洲人数学学习的内在优势。</p>
<p>西方农业发展是机械导向型，稻田文明是技术导向型。从事水稻耕种的亚洲农民一年的工作时长约为3000小时，毋庸置疑，千百年来种植水稻的农民是种植各类农作物的农民中最辛劳的一群。努力工作的品质在亚洲人身上很常见。亚洲人数学方面的成就也受惠于这种稻田文化。</p>
<p>西方农业休耕的文化传统使得教育改革者认为头脑也需要休耕，即将假期延长。富裕家庭与贫穷家庭孩子的差距主要是在非在校时间内形成的。学生在校时间为美国180天，韩国220天，日本243天。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;血染哈伦&quot;&gt;&lt;a href=&quot;#血染哈伦&quot; class=&quot;headerlink&quot; title=&quot;血染哈伦&quot;&gt;&lt;/a&gt;血染哈伦&lt;/h2&gt;&lt;p&gt;我们总是避免因为民族特性标签对个人产生先入为主的偏见，以各种理由拒绝以文化差异这种更广阔的背景来思考问题。农耕文明里，人们依
    
    </summary>
    
      <category term="阅读" scheme="https://shanergang.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Malcolm Gladwell" scheme="https://shanergang.github.io/tags/Malcolm-Gladwell/"/>
    
  </entry>
  
  <entry>
    <title>异类--机遇</title>
    <link href="https://shanergang.github.io/2017/05/13/%E5%BC%82%E7%B1%BB-%E6%9C%BA%E9%81%87/"/>
    <id>https://shanergang.github.io/2017/05/13/异类-机遇/</id>
    <published>2017-05-13T09:09:57.000Z</published>
    <updated>2017-05-13T09:15:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="罗塞托"><a href="#罗塞托" class="headerlink" title="罗塞托"></a>罗塞托</h2><p>原本居住于意大利的罗塞托人，移民到美国打工，一位行医17年的医生发现从来没有65岁以上的罗塞托人患心脏病。沃尔夫调查后排除了饮食、锻炼、基因等因素，最终得出结论：人体健康问题除了从个体角度，也要从社区角度进行分析，如文化背景、家庭朋友、社会结构等。</p>
<h2 id="马太效应"><a href="#马太效应" class="headerlink" title="马太效应"></a>马太效应</h2><blockquote>
<p>凡是有的，还要加给他，叫他有余；没有的，连他所有的，也要夺过来 – 新约·马太福音</p>
</blockquote>
<p>加拿大冰球运动员按照年龄分组，实行精英教育培养机制，即将球员按能力高低划为不同级别。从表面看，冰球运动员的成功依靠的是个人能力优势。我们通常也认为：个体特征的卓越是一个人出类拔萃的根本原因。然而实际中，加拿大最优秀的冰球运动员出身日期显著的集中于一、二、三月份，而一月一号恰好是选拔机制划定年龄分组的分界线。我们会发现，社会机制为个人成才有着巨大影响。几个月的年龄优势所带来的最初的生理优势，由于筛选、分组和区别训练的选拔制度，导致了优势的不断累积。同样的例子也发生在学校教育领域。</p>
<p>除了探究成功人士是什么样的人，我们还需探究他们为何会成为那样的人。就像森林里长得最高的树，绝不仅仅是因为它种子优良，机遇、勤奋、天分、环境都很重要。</p>
<h2 id="一万小时法则"><a href="#一万小时法则" class="headerlink" title="一万小时法则"></a>一万小时法则</h2><blockquote>
<p>任何一个领域的世界级水平都需要起码10000小时的训练</p>
</blockquote>
<p>莫扎特经历二十年作曲生涯创作出最伟大的作品；鲍比菲舍尔用了十年时间成为国际象棋大师；汉堡之行的甲壳虫乐队；Sun公司创始人比尔·乔伊；微软创始人比尔·盖茨。太多的事迹表明：一个人要完美的掌握某项复杂技能，需要不断的练习，而练习时长有一个最小临界量，一万小时。</p>
<p>通过对小提琴专业学生的实验，我们发现天赋的作用其实很小，而后天努力的作用很大。而想要得到一万小时的训练时间，是需要特定机遇的。除了能力，机遇和其他随机的优势也在帮助“异类”走向成功之巅。通过观察人类有史以来最富有的75人的出生时间，我们发现14个最富有的美国人都出生于19世纪中期的九年间。通过观察以一九七五年为起点的个人电脑时代，我们发现太多成功者出生于二十世纪五十年代。由此可见社会机遇对于个人成功的巨大帮助。</p>
<h2 id="天才之忧"><a href="#天才之忧" class="headerlink" title="天才之忧"></a>天才之忧</h2><blockquote>
<p>仅凭智商很难区分两个聪明的孩子。</p>
</blockquote>
<p>克里斯托弗罗根有195的智商，他说智商高的人做事倾向于更专注，能忽略无足轻重的细节，做更深入的思考。奥本海默和罗根同属天才，但两者的实践智力却是天壤之别。普通智力一部分来自于基因，是天生的能力。实践智力则是一系列可以学到的技能，而最重要的学习场所就是家庭。拉里奥通过对12个家庭的调查，发现只存在两种教育孩子的方式：自然成长和协同培养，而这两种方式通过阶级状况来划分，家境贫寒和家境富裕。家境贫寒的孩子更懂得守规矩，有很好的独立性，家境富裕的孩子更容易有权利意识。奥本海默正是协同培养的典范。</p>
<p>斯坦福心理学教授特曼从25万小学生中挑选出来1470个智商介于140到200的孩子，这些孩子被统称为特曼人。他认为除了道德之外，没有什么比智商对一个人的影响更重要了。通常一个人IQ得分越高，受教育程度越高，工资越高，寿命越长。可最终结果表明智力与成就之间并没有那么大的关联，更重要的原因在于家庭背景，在于帮助孩子获得应对社会的经验的社群。一旦某人智商超过120，更高的智商并不意味着同比转化为更多的现实优势。有人认为，名牌大学应该只将学生分为两类，符合要求和不符合要求。通过对比毕业后的生活情况，我们可以发现少数族裔和白人同样优秀。即智商存在门槛效应。其实智商测试存在明显的局限性：重收敛性思维测试，轻发散性思维测试。</p>
<h2 id="乔·弗洛姆"><a href="#乔·弗洛姆" class="headerlink" title="乔·弗洛姆"></a>乔·弗洛姆</h2><blockquote>
<p>20世纪30年代早期是律师的最佳出生年代，如同1955年之于软件工程师，1835年之于企业家。</p>
</blockquote>
<p>二十世纪四五十年代，保守的纽约律师事务所有点相私人俱乐部，如果你的家庭背景、宗教信仰、社会地位不符合要求，你最多只能去二流的小事务所，接大事务所不愿接的生意：诉讼和恶意收购，而这些在七八十年代变得炙手可热。</p>
<p>二十世纪三十年代是人口出生低谷。按出生年份将特曼人分为1903-1911和1912-1917两组，会发现失败者绝大多数属于第一组。其原因便在于二十世纪三十年代的经济大萧条和三九至四五年的第二次世界大战。</p>
<p>欧洲统治者不允许犹太人有自己的土地，他们只能通过商业和手艺谋生，移民美国的犹太人，百分之七十都掌握一种手艺技能。19世纪90年代，一个具有剪裁、或布匹行经验的人，就等于拥有了光明的前景。犹太人后裔能够成为专业人士恰恰是因为他们卑微的家族出生。</p>
<blockquote>
<p>只有艰苦从事没有意义的工作才称得上是艰苦的工作</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;罗塞托&quot;&gt;&lt;a href=&quot;#罗塞托&quot; class=&quot;headerlink&quot; title=&quot;罗塞托&quot;&gt;&lt;/a&gt;罗塞托&lt;/h2&gt;&lt;p&gt;原本居住于意大利的罗塞托人，移民到美国打工，一位行医17年的医生发现从来没有65岁以上的罗塞托人患心脏病。沃尔夫调查后排除了饮食、锻
    
    </summary>
    
      <category term="阅读" scheme="https://shanergang.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Malcolm Gladwell" scheme="https://shanergang.github.io/tags/Malcolm-Gladwell/"/>
    
  </entry>
  
  <entry>
    <title>算法导论第九章</title>
    <link href="https://shanergang.github.io/2017/05/04/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E4%B9%9D%E7%AB%A0/"/>
    <id>https://shanergang.github.io/2017/05/04/算法导论第九章/</id>
    <published>2017-05-04T04:03:00.000Z</published>
    <updated>2017-05-04T04:07:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最值"><a href="#最值" class="headerlink" title="最值"></a>最值</h2><ul>
<li>算法复杂度 $\Theta(n)$， 比较次数 $n-1$</li>
<li>同时找到最小、最大值复杂度$\Theta(n)$， 比较次数  $3\lfloor n/2 \rfloor$</li>
</ul>
<h2 id="顺序统计量"><a href="#顺序统计量" class="headerlink" title="顺序统计量"></a>顺序统计量</h2><h3 id="随机选择算法"><a href="#随机选择算法" class="headerlink" title="随机选择算法"></a>随机选择算法</h3><ul>
<li>参考快排</li>
<li>算法期望复杂度 $\Theta(n)$</li>
</ul>
<p>$$ T(n) \leq \sum_{k=1}^{n} X_k \cdot \left (T(\max\lbrace k-1, n-k \rbrace) + O(n) \right ) $$</p>
<p>$$ \mathbb{E}[T(n)] \leq \frac{1}{n} \cdot 2\sum_{k=\lfloor n/2 \rfloor}^{n} \mathbb{E}[T(k)] + O(n) $$</p>
<h3 id="最坏情况为线性时间的选择算法"><a href="#最坏情况为线性时间的选择算法" class="headerlink" title="最坏情况为线性时间的选择算法"></a>最坏情况为线性时间的选择算法</h3><ul>
<li>中位数</li>
<li>将数据每五个为一组分组，找到每组的中位数</li>
<li>将各组中位数的中位数为主元<br>$$ T(n) \leq T(\lceil n/5 \rceil) + T(7n/10+6) + O(n) $$</li>
</ul>
<h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><p><img src="/images/算法导论学习/Chp9-Exercise.png" alt="Alt text"></p>
<p>9.1-1, 9.1-2, 9.3-1, 9.3-3, 9.3-5, 9.3-6, 9.3-7, 9.3-8 </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;最值&quot;&gt;&lt;a href=&quot;#最值&quot; class=&quot;headerlink&quot; title=&quot;最值&quot;&gt;&lt;/a&gt;最值&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;算法复杂度 $\Theta(n)$， 比较次数 $n-1$&lt;/li&gt;
&lt;li&gt;同时找到最小、最大值复杂度$\Theta(n)$，
    
    </summary>
    
      <category term="算法导论学习" scheme="https://shanergang.github.io/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="选择算法" scheme="https://shanergang.github.io/tags/%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论第八章</title>
    <link href="https://shanergang.github.io/2017/04/27/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E5%85%AB%E7%AB%A0/"/>
    <id>https://shanergang.github.io/2017/04/27/算法导论第八章/</id>
    <published>2017-04-27T13:27:55.000Z</published>
    <updated>2017-04-27T13:39:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="比较排序"><a href="#比较排序" class="headerlink" title="比较排序"></a>比较排序</h2><ul>
<li>比较排序算法下界</li>
<li>比较排序与决策树（完全二叉树）的关系</li>
<li>决策树高度与比较排序复杂度的关系</li>
</ul>
<h2 id="运算排序"><a href="#运算排序" class="headerlink" title="运算排序"></a>运算排序</h2><h3 id="记数排序"><a href="#记数排序" class="headerlink" title="记数排序"></a>记数排序</h3><ul>
<li>$n$ 个在 $[0, k]$ 的整数，运行时间为 $O(k+n)$</li>
<li>基本思想：对每个输入元素 $x$, 确定不超过 $x$ 的元素的个数</li>
<li>稳定排序：具有相同值的元素在输入和输出数组上顺序一致</li>
<li>非原址排序<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">CountingSort</span><span class="params">(lis, k)</span>:</span></div><div class="line">    </div><div class="line">    B = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(lis)):</div><div class="line">        B.append(<span class="number">0</span>)</div><div class="line">        </div><div class="line">    C = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k+<span class="number">1</span>):</div><div class="line">        C.append(<span class="number">0</span>)</div><div class="line">        </div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lis:</div><div class="line">        C[i] += <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,k+<span class="number">1</span>):</div><div class="line">        C[i] = C[i]+C[i<span class="number">-1</span>]</div><div class="line">        </div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(lis)<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</div><div class="line">        B[C[lis[i]]<span class="number">-1</span>] = lis[i]</div><div class="line">        C[lis[i]] -= <span class="number">1</span></div><div class="line">    </div><div class="line">    <span class="keyword">return</span> B</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h3><ul>
<li>$n$ 个在 $d$ 位数，每位有 $k$ 个可能取值，运行时间为 $O(d(k+n))$</li>
<li>基于稳定排序</li>
<li>先按最高有效位 v.s. 先按最低有效位</li>
<li>对位数的灵活分解</li>
</ul>
<h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><ul>
<li>输入数据服从均匀分布</li>
<li>$n$ 个数据设计 $n$ 个桶</li>
<li>期望运行时间 $\Theta(n)$<br>$$ T(n) = \Theta(n) + \sum_{i=1}^{n}O(n_i^2) $$</li>
</ul>
<hr>
<h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><p><img src="/images/算法导论学习/Chp8-Exercise.png" alt="Alt text"><br>8.1-2, 8.1-3, 8.2-3, 8.2-4, 8.3-2, 8.3-4, 8.3-5,  8.4-4, 8.4-5</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;比较排序&quot;&gt;&lt;a href=&quot;#比较排序&quot; class=&quot;headerlink&quot; title=&quot;比较排序&quot;&gt;&lt;/a&gt;比较排序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;比较排序算法下界&lt;/li&gt;
&lt;li&gt;比较排序与决策树（完全二叉树）的关系&lt;/li&gt;
&lt;li&gt;决策树高度与比较排序
    
    </summary>
    
      <category term="算法导论学习" scheme="https://shanergang.github.io/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="排序算法" scheme="https://shanergang.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论第七章</title>
    <link href="https://shanergang.github.io/2017/04/27/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E4%B8%83%E7%AB%A0/"/>
    <id>https://shanergang.github.io/2017/04/27/算法导论第七章/</id>
    <published>2017-04-27T04:28:07.000Z</published>
    <updated>2017-06-25T14:03:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><ul>
<li>原址排序</li>
<li>期望时间复杂度 $\Theta(n\log n)$，且常数因子很小</li>
<li>最好时间复杂度 $\Theta(n\log n)$</li>
<li>只要划分是常数比例，快排复杂度始终为 $\Theta(n\log n)$</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">QuickSort</span><span class="params">(lis, p, r)</span>:</span></div><div class="line">    <span class="keyword">if</span> p &gt;= r:</div><div class="line">        <span class="keyword">return</span> lis</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        q = Partion(lis, p, r)</div><div class="line">        QuickSort(lis, p, q<span class="number">-1</span>)</div><div class="line">        QuickSort(lis, q+<span class="number">1</span>, r)</div><div class="line">    <span class="keyword">return</span> lis</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Partion</span><span class="params">(lis, p, r)</span>:</span></div><div class="line">    x = lis[r]</div><div class="line">    i = p<span class="number">-1</span></div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(p, r):</div><div class="line">        <span class="keyword">if</span> lis[j] &lt;= x:</div><div class="line">            i = i+<span class="number">1</span></div><div class="line">            temp = lis[i]</div><div class="line">            lis[i] = lis[j]</div><div class="line">            lis[j] = temp</div><div class="line">    lis[r] = lis[i+<span class="number">1</span>]</div><div class="line">    lis[i+<span class="number">1</span>] = x</div><div class="line">    <span class="keyword">return</span> i+<span class="number">1</span></div></pre></td></tr></table></figure>
<h2 id="随机化快排"><a href="#随机化快排" class="headerlink" title="随机化快排"></a>随机化快排</h2><ul>
<li>随机选择划分主元<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">RandomQuickSort</span><span class="params">(lis, p, r)</span>:</span></div><div class="line">    <span class="keyword">if</span> p &gt;= r:</div><div class="line">        <span class="keyword">return</span> lis</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        q = RandomPartion(lis, p, r)</div><div class="line">        QuickSort(lis, p, q<span class="number">-1</span>)</div><div class="line">        QuickSort(lis, q+<span class="number">1</span>, r)</div><div class="line">    <span class="keyword">return</span> lis</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">RandomPartion</span><span class="params">(lis, p, r)</span>:</span></div><div class="line">    index = randint(p,r)</div><div class="line">    x = lis[r]</div><div class="line">    lis[r] = lis[index]</div><div class="line">    lis[index] = x</div><div class="line">    <span class="keyword">return</span> Partion(lis, p, r)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="期望时间复杂度证明"><a href="#期望时间复杂度证明" class="headerlink" title="期望时间复杂度证明"></a>期望时间复杂度证明</h2><ul>
<li>快排运行时间有Partion上的操作时间决定</li>
<li>Partion操作至多被执行 $n$ 次</li>
<li><font color="red">分析划分主元与元素比较的总次数</font>

</li>
</ul>
<h2 id="最坏时间复杂度证明"><a href="#最坏时间复杂度证明" class="headerlink" title="最坏时间复杂度证明"></a>最坏时间复杂度证明</h2><p>$$ T(n) = \max_{0 \leq q\leq n-1} \lbrace T(q), T(n-1-q)\rbrace + \Theta(n) $$</p>
<ul>
<li>最坏时间复杂度 $\Theta(n^2)$</li>
<li>对完全有序数组，快排复杂度为 $\Theta(n^2)$，插入排序复杂度为 $\Theta(n)$</li>
</ul>
<h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><p><img src="/images/算法导论学习/Chp7-Exercise.png" alt="Alt text"><br>7.1-2, 7.4-1, 7.4-5, 7.4-6</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;原址排序&lt;/li&gt;
&lt;li&gt;期望时间复杂度 $\Theta(n\log n)$，且常数因子很小&lt;/li&gt;
&lt;li
    
    </summary>
    
      <category term="算法导论学习" scheme="https://shanergang.github.io/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="排序算法" scheme="https://shanergang.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-补充</title>
    <link href="https://shanergang.github.io/2017/04/26/Hexo-%E8%A1%A5%E5%85%85/"/>
    <id>https://shanergang.github.io/2017/04/26/Hexo-补充/</id>
    <published>2017-04-26T15:04:19.000Z</published>
    <updated>2017-04-26T15:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><ul>
<li><p>安装hexo-math</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-math --save</div></pre></td></tr></table></figure>
</li>
<li><p>在根目录下的_config.yml文件中添加</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plugins: </div><div class="line">  hexo-math</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数学公式&quot;&gt;&lt;a href=&quot;#数学公式&quot; class=&quot;headerlink&quot; title=&quot;数学公式&quot;&gt;&lt;/a&gt;数学公式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装hexo-math&lt;/p&gt;
&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;
    
    </summary>
    
      <category term="Hexo博客构建" scheme="https://shanergang.github.io/categories/Hexo%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://shanergang.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>算法导论第六章</title>
    <link href="https://shanergang.github.io/2017/04/26/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E5%85%AD%E7%AB%A0/"/>
    <id>https://shanergang.github.io/2017/04/26/算法导论第六章/</id>
    <published>2017-04-26T15:00:20.000Z</published>
    <updated>2017-04-26T15:08:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="堆性质的维护"><a href="#堆性质的维护" class="headerlink" title="堆性质的维护"></a>堆性质的维护</h2><ul>
<li>复杂度 $O(\log n)$<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">MaxHeapIFY</span><span class="params">(lis, pos, heapsize)</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="number">2</span>*pos+<span class="number">1</span> &lt; heapsize:</div><div class="line">        <span class="keyword">if</span> <span class="number">2</span>*pos+<span class="number">2</span> &lt; heapsize:</div><div class="line">            left = lis[<span class="number">2</span>*pos+<span class="number">1</span>]</div><div class="line">            right = lis[<span class="number">2</span>*pos+<span class="number">2</span>]</div><div class="line">            root = lis[pos]</div><div class="line">            <span class="keyword">if</span> left &gt; root <span class="keyword">and</span> left &gt; right:</div><div class="line">                lis[pos] = left</div><div class="line">                lis[<span class="number">2</span>*pos+<span class="number">1</span>] = root</div><div class="line">                MaxHeapIFY(lis, <span class="number">2</span>*pos+<span class="number">1</span>, heapsize)</div><div class="line">            <span class="keyword">elif</span> right &gt; root <span class="keyword">and</span> right &gt; left:</div><div class="line">                lis[pos] = right</div><div class="line">                lis[<span class="number">2</span>*pos+<span class="number">2</span>] = root</div><div class="line">                MaxHeapIFY(lis, <span class="number">2</span>*pos+<span class="number">2</span>, heapsize)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> lis</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            left = lis[<span class="number">2</span>*pos+<span class="number">1</span>]</div><div class="line">            root = lis[pos]</div><div class="line">            <span class="keyword">if</span> left &gt; root:</div><div class="line">                lis[pos] = left</div><div class="line">                lis[<span class="number">2</span>*pos+<span class="number">1</span>] = root</div><div class="line">                MaxHeapIFY(lis, <span class="number">2</span>*pos+<span class="number">1</span>, heapsize)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> lis</div><div class="line">    <span class="keyword">return</span> lis</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="建堆"><a href="#建堆" class="headerlink" title="建堆"></a>建堆</h2><ul>
<li>复杂度 $O(n)$<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">BuildMaxHeap</span><span class="params">(lis, heapsize)</span>:</span></div><div class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(heapsize<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</div><div class="line">        MaxHeapIFY(lis, pos, heapsize)</div><div class="line">    <span class="keyword">return</span> lis</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><ul>
<li>复杂度 $O(n \log n)$</li>
<li>原址排序<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">HeapSort</span><span class="params">(lis)</span>:</span></div><div class="line">    <span class="keyword">for</span> heapsize <span class="keyword">in</span> range(len(lis),<span class="number">0</span>,<span class="number">-1</span>):</div><div class="line">        BuildMaxHeap(lis, heapsize)</div><div class="line">        largest = lis[<span class="number">0</span>]</div><div class="line">        lis[<span class="number">0</span>] = lis[heapsize<span class="number">-1</span>]</div><div class="line">        lis[heapsize<span class="number">-1</span>] = largest</div><div class="line">    <span class="keyword">return</span> lis</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h2><ul>
<li>返回最大元素 $\Theta(1)$</li>
<li>插入新元素 $O(\log n)$</li>
<li>去掉并返回最大元素 $O(\log n)$</li>
<li>更新某一元素 $O(\log n)$</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;堆性质的维护&quot;&gt;&lt;a href=&quot;#堆性质的维护&quot; class=&quot;headerlink&quot; title=&quot;堆性质的维护&quot;&gt;&lt;/a&gt;堆性质的维护&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;复杂度 $O(\log n)$&lt;figure class=&quot;highlight python&quot;&gt;
    
    </summary>
    
      <category term="算法导论学习" scheme="https://shanergang.github.io/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="排序算法" scheme="https://shanergang.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论第二章</title>
    <link href="https://shanergang.github.io/2017/04/26/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
    <id>https://shanergang.github.io/2017/04/26/算法导论第二章/</id>
    <published>2017-04-26T14:40:40.000Z</published>
    <updated>2017-04-27T08:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><ul>
<li>最小复杂度 $O(n)$</li>
<li>最大复杂度 $O(n^2)$</li>
<li>平均复杂度 $O(n^2)$</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Insertion_Sort_Asce</span><span class="params">(lis)</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(lis)):</div><div class="line">        j = i</div><div class="line">        key = lis[j]</div><div class="line">        <span class="keyword">while</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> key &lt; lis[j<span class="number">-1</span>]:</div><div class="line">            lis[j] = lis[j<span class="number">-1</span>]</div><div class="line">            j = j - <span class="number">1</span></div><div class="line">        lis[j] = key</div><div class="line">    <span class="keyword">return</span> lis</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Insertion_Sort_Desc</span><span class="params">(lis)</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(lis)):</div><div class="line">        j = i</div><div class="line">        key = lis[j]</div><div class="line">        <span class="keyword">while</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> key &gt; lis[j<span class="number">-1</span>]:</div><div class="line">            lis[j] = lis[j<span class="number">-1</span>]</div><div class="line">            j = j - <span class="number">1</span></div><div class="line">        lis[j] = key</div><div class="line">    <span class="keyword">return</span> lis</div></pre></td></tr></table></figure>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><ul>
<li>最小复杂度 $O(n \log n)$</li>
<li>最大复杂度 $O(n \log n)$</li>
<li>平均复杂度 $O(n \log n)$</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Merge</span><span class="params">(lis1, lis2)</span>:</span></div><div class="line">    <span class="keyword">if</span> lis1 == []:</div><div class="line">        <span class="keyword">return</span> lis2</div><div class="line">    <span class="keyword">if</span> lis2 == []:</div><div class="line">        <span class="keyword">return</span> lis1</div><div class="line">    <span class="keyword">if</span> lis1[<span class="number">0</span>] &lt;= lis2[<span class="number">0</span>]:</div><div class="line">        <span class="keyword">return</span> [lis1[<span class="number">0</span>]] + Merge(lis1[<span class="number">1</span>:], lis2)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> [lis2[<span class="number">0</span>]] + Merge(lis1, lis2[<span class="number">1</span>:])</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Merge_Sort</span><span class="params">(lis)</span>:</span></div><div class="line">    <span class="keyword">if</span> len(lis) &gt; <span class="number">1</span>:</div><div class="line">        q = len(lis)/<span class="number">2</span></div><div class="line">        <span class="keyword">return</span> Merge(Merge_Sort(lis[:q]), Merge_Sort(lis[q:]))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> lis</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;插入排序&quot;&gt;&lt;a href=&quot;#插入排序&quot; class=&quot;headerlink&quot; title=&quot;插入排序&quot;&gt;&lt;/a&gt;插入排序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;最小复杂度 $O(n)$&lt;/li&gt;
&lt;li&gt;最大复杂度 $O(n^2)$&lt;/li&gt;
&lt;li&gt;平均复杂度 $O(n
    
    </summary>
    
      <category term="算法导论学习" scheme="https://shanergang.github.io/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="排序算法" scheme="https://shanergang.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-进阶</title>
    <link href="https://shanergang.github.io/2017/03/30/Hexo-%E8%BF%9B%E9%98%B6/"/>
    <id>https://shanergang.github.io/2017/03/30/Hexo-进阶/</id>
    <published>2017-03-30T05:50:13.000Z</published>
    <updated>2017-04-27T08:07:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>个性化设置：更换主题；标签与分类；站内搜索；订阅；站点地图；字数统计。</p>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ul>
<li>下载主题文件，保存到Hexo目录下的themes文件夹下。修改_config.yml文件中的themes选项。<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: &lt;theme folder name&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="自定义模板"><a href="#自定义模板" class="headerlink" title="自定义模板"></a>自定义模板</h2><ul>
<li>新建md文件模板，保存到Hexo目录下的scaffolds文件夹下。</li>
</ul>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><ul>
<li><p>安装插件</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-<span class="keyword">tag</span> <span class="title">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>新建标签文件，自动存放在hexo目录下。</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">create</span> <span class="keyword">new</span> page ”tags“</div></pre></td></tr></table></figure>
</li>
<li><p>修改tags目录下index.md文件的front-matter</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">type:</span> <span class="string">"tags"</span></div><div class="line"><span class="string">comments:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>新建分类和标签文件，自动存放在hexo目录下。</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">create</span> <span class="keyword">new</span> page <span class="string">"categories"</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改tags目录下index.md文件的front-matter</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">type:</span> <span class="string">"categories"</span></div><div class="line"><span class="string">comments:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="设定首页-归档-标签页面文章的篇数"><a href="#设定首页-归档-标签页面文章的篇数" class="headerlink" title="设定首页/归档/标签页面文章的篇数"></a>设定首页/归档/标签页面文章的篇数</h2><ul>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改Themes目录下的_config.yml文件</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">index_generator:</span></div><div class="line"><span class="attr">    per_page:</span> <span class="number">5</span></div><div class="line"></div><div class="line"><span class="attr">archive_generator:</span></div><div class="line"><span class="attr">    per_page:</span> <span class="number">20</span></div><div class="line"><span class="attr">    yearly:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    monthly:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="attr">tag_generator:</span></div><div class="line"><span class="attr">    per_page:</span> <span class="number">10</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><ul>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-searchdb <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改Hexo目录下的_config.yml文件</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">search:</span></div><div class="line"><span class="symbol">  path:</span> search.xml</div><div class="line"><span class="symbol">  field:</span> post</div><div class="line"><span class="symbol">  format:</span> html</div><div class="line"><span class="symbol">  limit:</span> <span class="number">10000</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h2><ul>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改Hexo目录下的_config.yml文件</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">plugin:</span></div><div class="line">    hexo-generator-feed</div><div class="line"><span class="symbol"></span></div><div class="line">feed:</div><div class="line"><span class="symbol">    type:</span> atom</div><div class="line"><span class="symbol">    path:</span> atom.xml</div><div class="line"><span class="symbol">    limit:</span> <span class="number">20</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改Themes目录下的_config.yml文件</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">rss:</span> /atom.xml</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="站点地图"><a href="#站点地图" class="headerlink" title="站点地图"></a>站点地图</h2><ul>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-generator-baidu-sitemap <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改Hexo目录下的_config.yml文件</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">plugins:</span></div><div class="line">    hexo-generator-sitemap</div><div class="line">    hexo-generator-baidu-sitemap</div><div class="line"><span class="symbol">    </span></div><div class="line">sitemap:</div><div class="line"><span class="symbol">    path:</span> sitemap.xml</div><div class="line"><span class="symbol"></span></div><div class="line">baidusitemap:</div><div class="line"><span class="symbol">  path:</span> baidusitemap.xml</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><ul>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-wordcount <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改Themes目录下的_config.yml文件</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_wordcount:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  min2read:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个性化设置：更换主题；标签与分类；站内搜索；订阅；站点地图；字数统计。&lt;/p&gt;
&lt;h2 id=&quot;更换主题&quot;&gt;&lt;a href=&quot;#更换主题&quot; class=&quot;headerlink&quot; title=&quot;更换主题&quot;&gt;&lt;/a&gt;更换主题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载主题文件，保存到Hex
    
    </summary>
    
      <category term="Hexo博客构建" scheme="https://shanergang.github.io/categories/Hexo%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://shanergang.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-基础</title>
    <link href="https://shanergang.github.io/2017/03/29/Hexo-%E5%9F%BA%E7%A1%80/"/>
    <id>https://shanergang.github.io/2017/03/29/Hexo-基础/</id>
    <published>2017-03-29T12:05:01.000Z</published>
    <updated>2017-04-27T08:06:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过 npm 安装 Hexo 并初始化；将 Hexo 文件夹与 Git 账号关联；添加新文件；编译 Hexo 文件。</p>
<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><ul>
<li><p>安装 nvm</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</div></pre></td></tr></table></figure>
</li>
<li><p>安装 node.js</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install stable</div></pre></td></tr></table></figure>
</li>
<li><p>安装 Hexo</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-</div><div class="line">npm install hexo --save</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h2><ul>
<li><p>初始化</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
</li>
<li><p>安装插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="关联-Git"><a href="#关联-Git" class="headerlink" title="关联 Git"></a>关联 Git</h2><ul>
<li><p>创建Github上个人主页存放仓库，库名“<username>/<username>.github.io”，访问地址“https://<username>.github.io”</username></username></username></p>
</li>
<li><p>修改 _config.yml 文件</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">deploy</span>:</div><div class="line">  <span class="attribute">type</span>: git</div><div class="line">  <span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/shanergang/shanergang.github.io.git</span></div><div class="line">  <span class="attribute">branch</span>: master</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="添加新文件"><a href="#添加新文件" class="headerlink" title="添加新文件"></a>添加新文件</h2><ul>
<li>根据模板，新建md文件，自动存放在_posts目录下。<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new &lt;template name&gt; "&lt;file name&gt;" #新建文章</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><ul>
<li><p>编译 Hexo</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
</li>
<li><p>生成主页</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure>
</li>
<li><p>本地预览</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过 npm 安装 Hexo 并初始化；将 Hexo 文件夹与 Git 账号关联；添加新文件；编译 Hexo 文件。&lt;/p&gt;
&lt;h2 id=&quot;安装-Hexo&quot;&gt;&lt;a href=&quot;#安装-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Hexo博客构建" scheme="https://shanergang.github.io/categories/Hexo%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://shanergang.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
